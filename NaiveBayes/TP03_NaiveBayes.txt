TP03 : Naive Bayes
===================

Les étudiants doivent compléter le code afin de créer un classifieur Naive Bayes pour les caractéristiques nominales. 
Aussi, ils doivent analyser des résultats en se basant sur des tests dans le but de comprendre l'effet des différents hyper-paramètres.


OUTILS : Python, Jupyter, pandas, scikit-learn, numpy

DATASETS : Jouer (caractéristiques nominales), SMS Spam Collection Dataset

PLAN : 

I. Implémentation
    I.1. Entraînement de la probabilité antérieure
    I.2. Entraînement de la probabilité de vraissemblance (loi multinomiale)
    I.3. Entraînement loi multinomiale
    I.4. Estimation de la probabilité de vraissemblance (loi multinomiale)
    I.5. Prédiction de la classe (loi multinomiale)
    I.6. Regrouper en une classe (loi multinomiale)
II. Application et analyse
    II.1. Probabilité antérieure
    II.2. Lissage
    II.3. Comparaison avec d'autres algorithmes
  
QUOI FAIRE : 

I- Implémentation
    - Compléter la fonction des stastistiques pour la probabilité antérieure
    - Compléter la fonction des statistiques de vraissemblance (1 seule caractéristique)
    - Compléter la fonction qui calcule la vraissamblance d'une valeur donnée
    - Réaliser la fonction de prédiction des log des probabilités
    
II- Application et analyse
    - L'effet de la probabilité antérieure (Analyse)
    - L'effet du lissage (Analyse)
    - Comparaison avec d'autres algorithmes en terme du temps d'apprentissage et de test (Analyse)
    - Comparaison avec d'autres algorithmes en terme de qualité de prédiction (Analyse)

